@model Camada.Dominio.Mensagens.TelaPasswords

@{
    ViewBag.Title = "Delete";
}

<h2><i class="fa fa-trash"></i> Delete</h2>
<div class="form-horizontal">
    <h4>Egali Passwords</h4>
    <hr />
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.ID_EGALI_PASSWORDS)

        <div class="form-group">
            @Html.LabelFor(model => model.Item, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Item, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Item, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="table-responsive">
            <table id="gridEgali_Password" class="table table-striped table-bordered table-hover table-responsive dataTable no-footer" cellspacing=" 0" style=" overflow scroll;">
                <thead class="sorted_head">
                    <tr>
                        <th>
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DT_Reg)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.LogLogin)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Item)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Login)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Password)
                        </th>
                    </tr>
                </thead>
                <tbody></tbody>
                <tfoot>

                </tfoot>
            </table>
        </div>


        <div class="form-group">
            <div class="col-md-5">
                <button type="submit" class="btn btn-default btn-sm pull-left" data-loading-text="
                        <i class='fa fa-circle-o-notch fa-spin'></i> Copied ">
                        <i class="fa fa-trash-o"></i> &nbsp;
                    Delete
                    </button>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-5">
                <button type="button" class="btn btn-default btn-sm pull-left" onclick="location.href='@Url.Action("Index", "EGALI_PASSWORDS")'"
                        data-loading-text="
                        <i class='fa fa-circle-o-notch fa-spin'></i> Copied ">
                        <i class="fa fa-arrow-left"></i> &nbsp;
                        Back to List
                    </button>
            </div>
        </div>
    </div>
}



<script language="javascript" type="text/javascript">

    var filtro = (new function () {
        var self = this;
        this.tabela = null;
        this.URL = '';

        this.carregar = function () {
            try {
                self.getDataTable().draw();
            }
            catch (e) {
                console.log(e);
            }
            return false;
        };

        this.getDataTable = function () {
            return self.tabela.DataTable();
        };

        this.init = function () {
            self.tabela = $('#gridEgali_Password');

            self.tabela.DataTable({
                "language": {
                    "url": "/Scripts/DataTables/Portuguese-Brasil.txt"
                },

                stateSave: true,
                "searching": true,
                "dom": 'rt<"bottom"lp<"clear">>',
                "bServerSide": true,
                "bProcessing": true,
                "bSort": false,
                "sPaginationType": "full_numbers",
                "sAjaxSource": self.URL,
                "columnDefs": [
                      {
                          "targets": [0],
                          "visible": false,
                          "searchable": false
                      }
                ],
                serverParams: function (aoData) {
                    //Recupera todos os campos do formulario e envia o name e value como paramentros
                    $.each($("form").serializeArray(), function (indice, dados) {
                        aoData.push(dados);
                    });

                    aoData.push({ "name": "myParam", "value": "myValue" });
                }
            }).on('processing.dt', function (e, settings, processing) {

                var valor = $(this).val();
                var btn = $('#btnPesquisar');
                // processing ? btn.button('loading') : btn.button('reset');
            });
        };
        return this;
    });

    //Aqui Dispara a Pesquisa dentro do Controller ExemploGrid
    filtro.URL = '@Url.Action("GetGridEditEgali_Password", "EGALI_PASSWORDS")';
    $(filtro.init);

</script>