@model Camada.Dominio.Mensagens.GridLists

@{
    ViewBag.Title = "Index";
}
<h2><i class="fa fa-search"></i> Search</h2>
<div class="form-horizontal">
    <h4>Blacklist</h4>
</div>
<div style="padding-bottom: 40px; padding-top: 10px;">
    <button type="button" class="btn btn-default btn-sm pull-left" onclick="location.href='@Url.Action("CreateBlacklist", "LISTs")'"
            data-loading-text="
                        <i class='fa fa-circle-o-notch fa-spin'></i> Copied ">
                        <i class="fa fa-file-o"></i> &nbsp;
                            Create Blacklist New
                    </button>
</div>
<hr />

<form id="frmPesquisa" class="form-horizontal" role="form">
    @Html.ValidationSummary(true)

    <div class="form-group">
        <div class="col-md-13">
            <div class="form-group">
                <label for="txtFirstName" class="col-sm-2 control-label">First Name</label>
                <div class="col-sm-3">
                    <input type="text" name="txtFirstName" class="form-control input-sm" id="txtFirstName" required />
                </div>
                @*@Html.Label("Calc Type", htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-2">
                    @Html.DropDownList("IDCalc_Type", (IEnumerable<SelectListItem>)ViewBag.IDCalc_Type, new { @class = "form-control input-sm" })
                    @Html.ValidationMessage("IDCalc_Type", "", new { @class = "text-danger" })
                </div>*@
            </div>

            <div class="form-group">
                <label for="txtLastName" class="col-sm-2 control-label">Last Name</label>
                <div class="col-sm-3">
                    <input type="text" name="txtLastName" class="form-control input-sm" id="txtLastName" required />
                </div>
                @*@Html.Label("User", htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-5">
                    @Html.Editor("txtUser", new { htmlAttributes = new { @class = "form-control countTotal" } })
                    @Html.ValidationMessage("txtUser", "", new { @class = "text-danger" })
                </div>*@
            </div>
        </div>
    </div>


    <div class="form-group">
        <div class="col-sm-offset-0 col-sm-12">
            <div class="barraComando">
                </a>
                <button type="submit" class="btn btn-default btn-sm pull-right" title="Pesquisar registro" id="btnPesquisar" data-loading-text="
                        <i class='fa fa-circle-o-notch fa-spin'></i> Pesquisar ">
                        <i class="fa fa-search"></i> &nbsp;
                        Pesquisar
                    </button>

                <a class="btn btn-default btn-sm pull-right" title="Limpar Pesquisa" id="btnLimpar" data-loading-text="
                        <i class='fa fa-eraser'></i> Limpar">
                        <i class="fa fa-eraser"></i> &nbsp;
                        Limpar
                    </a>
            </div>
        </div>
    </div>
</form>
<div class="table-responsive">
    <table id="gridList" class="table table-striped table-bordered table-hover table-responsive dataTable no-footer" cellspacing="0" style="overflow: scroll;">
        <thead class="sorted_head">
            <tr>
                @*<th> </th>*@
                @*<th>
                        @Html.DisplayNameFor(model => model.identificador)
                    </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.ID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LOGLOGIN)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FullName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CHECK_IN)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CHECK_OUT)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.NOTES)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FILE_CONTENT)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody></tbody>
        <tfoot>

        </tfoot>
    </table>
</div>

@section scripts{
    <script type="text/javascript">
        $('#btnLimpar').hide();

        var filtro = (new function () {
            var self = this;
            
            
            this.tabela = null;
            this.txtFirstName = null;
            this.txtLastName = null;
            this.URL = '';

            this.carregar = function () {

                try {

                    $('#btnLimpar').show();
                    self.dtInicio = $("#txtFirstName").val();
                    self.dtFim = $("#txtLastName").val();
                    self.getDataTable().draw();

                }
                catch (e) {
                    console.log(e);
                }

                return false;
            };

            this.getDataTable = function () {
                return self.tabela.DataTable();
            };

            this.init = function () {
                self.tabela = $('#gridList');

                self.tabela.DataTable({
                    "language": {
                        "url": "/Scripts/DataTables/Portuguese-Brasil.txt"
                    },

                    stateSave: true,
                    "searching": true,
                    "dom": 'rt<"bottom"lp<"clear">>',
                    "bServerSide": true,
                    "bProcessing": true,
                    "bSort": true,
                    "sPaginationType": "full_numbers",
                    "sAjaxSource": self.URL,
                    "columnDefs": [
                          {
                              "targets": [0],
                              "visible": false,
                              "searchable": false
                          },
                            {
                                "targets": -1,
                                "data": null,
                                "bSortable": false,
                                "defaultContent": "&nbsp;<i title='Editar registro' class='fa fa-edit fa-lg btnEditar corIconeEditar'></i>  "
                                //"defaultContent": "nda ainda"
                            }
                    ],
                    serverParams: function (aoData) {
                        //Recupera todos os campos do formulario e envia o name e value como paramentros
                        $.each($("form").serializeArray(), function (indice, dados) {
                            aoData.push(dados);
                        });

                        aoData.push({ "name": "myParam", "value": "myValue" });
                    }


                }).on('processing.dt', function (e, settings, processing) {

                    var valor = $(this).val();
                    var btn = $('#btnPesquisar');
                    // processing ? btn.button('loading') : btn.button('reset');
                });

                $('#gridList tbody').on('click', '.btnEditar', self.editar);
                $('#gridList tbody').on('click', '.btnCancelar', self.remover);

                $('#btnPesquisar').on('click', self.carregar);


                //$('#btnNovo').on('click', function (e) {
                //    var $btn = $(this).button('loading');
                //});

                $('#btnLimpar').on('click', function () {
                    //var $btn = $(this).button('loading');
                    self.dtInicio = $("#txtFirstName").val("");
                    self.txtUser = $("#txtLastName").val("");
                    self.carregar();
                    //$btn.button('reset');
                    $('#btnLimpar').hide();
                });
            };


            this.editar = function () {
                var data = self.getDataTable().row($(this).parents('tr')).data();
                var url = '@Url.Action("EditBlacklist", "LISTS")';
                url = url + '/' + data[0];
                window.location.assign(url);
            };

            this.remover = function (e) {
                var data = self.getDataTable().row($(this).parents('tr')).data();
                var url = '@Url.Action("DeleteBlacklist", "LISTS")';
                url = url + '/' + data[0];
                window.location.assign(url);
            };

            return this;
        });

        //Aqui Dispara a Pesquisa dentro do Controller ExemploGrid
        filtro.URL = '@Url.Action("GetGridBlacklist", "LISTs")';
        $(filtro.init);

    </script>

}
